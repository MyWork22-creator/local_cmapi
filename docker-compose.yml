version: '3.9'

volumes:
  mysql_data:

networks:
  edge: {}
  appnet: {}
  
services:
  nginx:
    image: nginx:alpine
    container_name: fastapi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - edge
    depends_on:
      - fastapi
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx  # For storing Nginx logs

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    image: fastapi-api:latest
    container_name: fastapi_api
    restart: unless-stopped
    working_dir: /app
    networks:
      - appnet
      - edge
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    expose:
      - "8000"
    volumes:
      - ./app:/app/app  # Mount your code for development (optional)
      - ./logs:/app/logs  # For application logs

  mysql:
    image: mysql:8.0.33
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql  # For initial DB setup
      - ./mysql/conf.d:/etc/mysql/conf.d  # Custom MySQL config
    networks: [appnet]
    command:
      - "--default-authentication-plugin=mysql_native_password"
      - "--max_connections=1000"
      - "--innodb_buffer_pool_size=1G"
      - "--performance_schema=0"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
