version: '3.8'

services:
  crm_server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crm-app
    restart: unless-stopped
    working_dir: /app
    networks:
      - crm_network
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    ports:
      - '8100:8000'

  mysql:
    image: 'mysql:8.0.42'
    container_name: crm-mysql
    restart: unless-stopped
    ports:
      - '3308:3306'
    environment:
      MYSQL_DATABASE: '${DB_NAME}'
      MYSQL_USER: '${DB_USER}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
    volumes:
      - 'sail-mysql:/var/lib/mysql'
    networks:
      - crm_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      retries: 3
      timeout: 5s
  backup:
    image: alpine:latest
    container_name: backup-service
    restart: unless-stopped
    volumes:
      - ./scripts:/scripts
      - /srv/backups:/backups
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: [ "sh", "-c", "apk add --no-cache bash mysql-client docker-cli tzdata && crond -f -L /var/log/cron.log" ]
    networks:
      - crm_network
networks:
  crm_network:
    driver: bridge

volumes:
  sail-mysql:
    driver: local
