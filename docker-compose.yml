version: '3.9'

networks:
  edge: {}
  appnet: {}

volumes:
  mysql_data:
  caddy_data:
  caddy_config:

services:
  # Caddy reverse proxy
  caddy:
    image: caddy:latest
    container_name: caddy_proxy  # keep your existing container
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - edge

  # FastAPI backend
  crm_server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-api
    restart: unless-stopped
    working_dir: /app
    networks:
      - appnet
      - edge
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    expose:
      - "8000"

  # MySQL database
  mysql:
    image: mysql:8.0.33
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - appnet
    command:
      - "--default-authentication-plugin=mysql_native_password"
      - "--max_connections=100"
      - "--innodb_buffer_pool_size=256M"
      - "--performance_schema=0"
    healthcheck:
      test: ["CMD-SHELL", "mysql -h 127.0.0.1 -uroot -p\"$${MYSQL_ROOT_PASSWORD}\" -e 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 60s
